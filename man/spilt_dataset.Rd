% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spilt_dataset.R
\name{spilt_dataset}
\alias{spilt_dataset}
\title{Split Dataset into Training, Validation, and Test Sets}
\usage{
spilt_dataset(
  interest_cell_type_branch_sGRN = interest_cell_type_branch_sGRN,
  prop = c(0.7, 0.15),
  set_seed = stats::runif(1),
  interest_cell_type_group = interest_cell_type_group,
  ncores = 1
)
}
\arguments{
\item{interest_cell_type_branch_sGRN}{The output of function get_branch_sGRN.}

\item{prop}{Numeric vector of length 2. Proportion of samples for training and validation sets respectively.
The remaining proportion (1 - sum(prop)) will be used for testing. Default is c(0.7, 0.15).}

\item{set_seed}{Numeric. Random seed for reproducible sampling. Default is a random uniform value.}

\item{interest_cell_type_group}{The output of function cell_grouping.}

\item{ncores}{See in ?get_interest_cell_type_data.}
}
\value{
A nested list structure organized by cell type and branch, containing:
\itemize{
\item For each branch: A data frame with partitioned datasets including:
\itemize{
\item \code{dataset}: Indicator of dataset partition ("training_set", "validation_set", "test_set")
\item \code{TG}: Target gene identifier
\item \code{TF}: Transcription factor identifier
\item \code{theta_s}: Regulatory strength from sGRN
\item \code{TFE_K}, \code{TGA_K}, \code{TGE_K}: Cell group state features for each time point
}\item An "all" element containing the combined dataset across all branches
}
The partitioning ensures all TFs and TGs are represented in the training set.
}
\description{
This function performs stratified sampling to partition gene regulatory network data into training, validation, and test sets.
It ensures comprehensive coverage of all transcription factors (TFs) and target genes (TGs) in the training set to ensuring continuous coverage of all positive samples during model training.
}
\details{
The function performs the following key operations:
\enumerate{
\item Sets random seed for reproducible sampling
\item Generates all possible TG-TF combinations with regulatory strength scores
\item Performs stratified sampling to maintain class balance (positive/negative samples)
\item Verifies comprehensive coverage of all TFs and TGs in training set
\item Adds cell group state features (TFE, TGA, TGE) for each time point
\item Returns organized datasets ready for machine learning model training
}
}
\note{
Important considerations:
\itemize{
\item If the GRN has insufficient positive samples, sampling may fail after 100 attempts
\item The function includes a resampling mechanism to ensure comprehensive training set coverage
\item Cell group state features are added for each time point, providing temporal context
\item Uses parallel processing for efficient handling of multiple cell types
\item Setting a fixed seed ensures reproducible dataset partitioning
}
}
\section{Sampling Strategy}{

The function uses stratified sampling to ensure:
\itemize{
\item Positive samples (theta_s > 0) and negative samples (theta_s = 0) are proportionally represented
\item All TFs and TGs appear in the training set (through resampling if necessary)
\item The specified proportions are maintained across all partitions
}
}

\examples{
\dontrun{
prop = c(0.7, 0.15) # c(0.7, 0.2)
set_seed = 123 # Reproducible
# set_seed = stats::runif(1) # Not Reproducible
ncores = parallel::detectCores() - 1 # in Linux
# ncores = 1 # in Windows
interest_cell_type_branch_dataset_spilt = spilt_dataset(
  interest_cell_type_branch_sGRN = interest_cell_type_branch_sGRN,
  prop = prop,
  set_seed = set_seed,
  interest_cell_type_group = interest_cell_type_group,
  ncores = ncores
)
}
}
