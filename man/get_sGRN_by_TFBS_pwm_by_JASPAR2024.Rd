% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_sGRN_by_TFBS_pwm_by_JASPAR2024.R
\name{get_sGRN_by_TFBS_pwm_by_JASPAR2024}
\alias{get_sGRN_by_TFBS_pwm_by_JASPAR2024}
\title{Construct Standard Gene Regulatory Networks (sGRNs) from Transcription Factor Binding Sites (TFBS) Position Weight Matrices PWMs}
\usage{
get_sGRN_by_TFBS_pwm_by_JASPAR2024(
  interest_cell_type_data = interest_cell_type_data,
  promoter_range = 50,
  results_identify_TGs = results_identify_TGs,
  genome = BSgenome.Hsapiens.UCSC.hg38,
  min_score_for_matchPWM = "80\%",
  species = "Homo sapiens",
  collection = c("CORE", "CNE", "PHYLOFACTS", "SPLICE", "POLII", "FAM", "PBM",
    "PBM_HOMEO", "PBM_HLH", "UNVALIDATED"),
  output_predicted_TFBS = FALSE,
  ncores = 1
)
}
\arguments{
\item{interest_cell_type_data}{The output of function get_interest_cell_type_data.}

\item{promoter_range}{See in ?identify_TGs.}

\item{results_identify_TGs}{The output of function identify_TGs.}

\item{genome}{A BSgenome object representing the reference genome to use for sequence extraction.
Default is \code{BSgenome.Hsapiens.UCSC.hg38} (R package BSgenome.Hsapiens.UCSC.hg38 is needed).
Also \code{BSgenome.Hsapiens.UCSC.hg19} is valid  (R package BSgenome.Hsapiens.UCSC.hg19 is needed).}

\item{min_score_for_matchPWM}{Character. Minimum score threshold for PWM matching.
Can be a percentage string between 0 and 1 (e.g., "80\%"). Default is "80\%".}

\item{species}{See in ?get_TGs_from_JASPAR2024.}

\item{collection}{See in ?get_TGs_from_JASPAR2024.}

\item{output_predicted_TFBS}{Logical. Whether to output detailed TFBS prediction information. Default is FALSE.}

\item{ncores}{See in ?get_interest_cell_type_data.}
}
\value{
A named list (by cell type) where each element is a matrix (its class is data.frame) representing the TF-TG association network:
\itemize{
\item Rows: Target genes (TGs)
\item Columns: Transcription factors (TFs)
\item Values: Normalized PWM match scores (ranging from 0 to approximately 0.95)
}
The matrices are sparse, with most values being 0 indicating no predicted regulatory relationship.
}
\description{
This function constructs standard gene regulatory networks (sGRNs) by predicting transcription factor binding sites (TFBS) using position weight matrices (PWMs) from the JASPAR2024 database.
It maps transcription factors (TFs) to target genes (TGs) based on PWM matching scores in promoter regions,
generating TF-TG association matrices for each cell type.
}
\details{
The function performs the following key operations:
\enumerate{
\item Maps TGs to their promoter regions using chromatin accessibility data
\item Retrieves PWMs for known TFs from JASPAR2024 database
\item Normalizes PWM matrices to represent base probabilities
\item Uses parallel processing to match PWMs to promoter sequences in Linux
\item Constructs TF-TG association matrices based on match scores
\item Normalized results are divided by 1.05 times the maximum match score to prevent match scores that are too close to 1 from causing instability in subsequent training
}
}
\note{
Important considerations:
\itemize{
\item \code{min_score_for_matchPWM} is a critical parameter that affects network sparsity
\item Only works on Linux systems for parallel processing due to \code{mclapply} limitations
\item PWM matching is computationally intensive - use parallel processing when possible
\item The function generates a CSV file with detailed TFBS predictions in the output directory
\item Normalization (division by 1.05 times max score) ensures values range from 0 to 0.95
\item Requires BSgenome and JASPAR2024 packages for sequence data and PWMs
}
}
\section{Algorithm Details}{

For each cell type, the function:
\itemize{
\item Extracts promoter sequences for all target genes
\item Matches each TF's PWM against all promoter sequences
\item Records the maximum match score for each TF-TG pair
\item Filters TFs to those present in the expression data
\item Constructs sparse association matrices
}
}

\examples{
\dontrun{
promoter_range = 50
interest_cell_type = c("CD4 TEM", "cDc")
# interest_cell_type = "Treg"
ncores = ceiling(parallel::detectCores() / 2) # in Linux
# ncores = 1 # in Windows
min_score_for_matchPWM = "80\%"
library(BSgenome.Hsapiens.UCSC.hg38)
interest_cell_type_sGRN_all_TGTF_pairs = get_sGRN_by_TFBS_pwm_by_JASPAR2024(
  interest_cell_type_data = interest_cell_type_data,
  promoter_range = promoter_range,
  results_identify_TGs = results_identify_TGs,
  genome = BSgenome.Hsapiens.UCSC.hg38,
  min_score_for_matchPWM = min_score_for_matchPWM,
  species = "Homo sapiens",
  collection = c("CORE", "CNE", "PHYLOFACTS", "SPLICE", "POLII", "FAM", "PBM", "PBM_HOMEO", "PBM_HLH", "UNVALIDATED"),
  output_predicted_TFBS = FALSE,
  ncores = ncores
)
}
}
