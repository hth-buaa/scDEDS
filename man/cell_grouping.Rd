% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_grouping.R
\name{cell_grouping}
\alias{cell_grouping}
\title{Cell grouping based on pseudotime and gene expression/activity}
\usage{
cell_grouping(
  interest_cell_type_genes_pseudotime_info = interest_cell_type_genes_pseudotime_info,
  points_x_for_fitting_nc_and_nmin = points_x_for_fitting_nc_and_nmin,
  points_y_for_fitting_nc_and_nmin = c(5, 10, 15),
  ncores = 1
)
}
\arguments{
\item{interest_cell_type_genes_pseudotime_info}{The output of function get_genes_pseudotime_info.}

\item{points_x_for_fitting_nc_and_nmin}{A numeric vector of length 3 requiring all positive integers in strictly increasing order.
X-coordinates (cell counts) for fitting the logarithmic model that determines minimum cells per group.
If points_y_for_fitting_nc_and_nminforms an arithmetic sequence, it is recommended that twice the median value of points_x_for_fitting_nc_and_nmin is less than the sum of its first and last values.}

\item{points_y_for_fitting_nc_and_nmin}{A numeric vector of length 3 requiring all positive integers in strictly increasing order.
Y-coordinates (group counts) for fitting the logarithmic model that determines minimum cells per group.}

\item{ncores}{See in ?get_interest_cell_type_data.}
}
\value{
A nested list structure organized by cell type, where for each cell type contains:
\itemize{
\item \code{Branches_n_group}: Number of groups in each branch
\item \code{Branches_n_k}: Number of cells in each group for each branch
\item \code{n_min}: Minimum cell threshold used for each branch
\item \code{Branches_T_k}: Pseudotime values for each group
\item \code{Branches_Tslot_k}: Time interval lengths for each group
\item \code{Branches_TFE_T}: Aggregated TF expression values for each group
\item \code{Branches_TGA_T}: Aggregated TG activity values for each group
\item \code{Branches_TGE_T}: Aggregated TG expression values for each group
}
}
\description{
This function performs cell grouping along pseudotime trajectories based on gene expression and activity profiles.
It implements an adaptive grouping algorithm that ensures each group contains sufficient cells with non-zero expression/activity values for reliable downstream analysis.
The function uses a logarithmic fitting model to determine optimal group sizes and produces aggregated expression values for each cell group.
}
\details{
The function performs the following key operations:
\enumerate{
\item Validates input parameters to ensure proper model fitting
\item Fits a logarithmic model (y = c*ln(ax+b)) to determine optimal group sizes based on cell counts
\item Implements an adaptive cell grouping algorithm that ensures each group meets minimum non-zero value requirements
\item Calculates pseudotime values and time intervals for each cell group
\item Aggregates gene expression and activity values within each group
\item Returns organized data structures for downstream differential equation analysis
}
}
\note{
Important considerations:
\itemize{
\item The logarithmic fitting parameters are critical hyperparameters that significantly affect grouping results
\item The function validates that input points form a strictly increasing sequence of positive integers
\item Grouping ensures each gene has sufficient non-zero values in each group for reliable analysis
\item The algorithm handles various edge cases including insufficient cells for grouping
}
}
\section{Algorithm Details}{

The grouping algorithm follows these steps for each branch:
\itemize{
\item Calculate minimum cell threshold using the fitted logarithmic model
\item Iteratively assign cells to groups while ensuring sufficient non-zero values
\item Handle edge cases where remaining cells are insufficient for new groups
\item Calculate mean expression/activity values for each gene in each group
\item Assign pseudotime values and time intervals to each group
}
}

\examples{
\dontrun{
points_x_for_fitting_nc_and_nmin = c(280, 450, 650)
points_y_for_fitting_nc_and_nmin = c(5, 10, 15)
ncores = parallel::detectCores() - 1 # In Linux.
# ncores = 1 # In windows.
interest_cell_type_group = cell_grouping(
  interest_cell_type_genes_pseudotime_info = interest_cell_type_genes_pseudotime_info,
  points_x_for_fitting_nc_and_nmin = points_x_for_fitting_nc_and_nmin,
  points_y_for_fitting_nc_and_nmin = points_y_for_fitting_nc_and_nmin,
  ncores = ncores
)
}
}
