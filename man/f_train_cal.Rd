% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_train_cal.R
\name{f_train_cal}
\alias{f_train_cal}
\title{This function is the minimized objective function in the model trained using the training set data.}
\usage{
f_train_cal(branch_params_vec = branch_params_vec)
}
\arguments{
\item{branch_params_vec}{Vector. A flattened vector containing all model parameters for a specific branch, with parameter names defined before.}
}
\value{
A numeric value representing the negative weighted objective function (multiplied by -100 for optimization purposes).
Lower values indicate better model fit. The objective function combines:
\itemize{
\item Mean squared prediction errors for TFE, TGA, and TGE values across time points
\item Variance regularization terms for beta parameters and expression states
\item Weighting factors that emphasize different components of the model
}
}
\description{
This function is the minimized objective function in the model trained using the training set data.
}
\details{
The function performs the following complex operations for each TG-TF pair in the training data:
\enumerate{
\item Parameter Organization: Assigns names to the parameter vector
\item TG-TF Pair Processing: Extracts and processes each regulator-target pair from training data
\item Objective Computation: Calculates weighted squared errors between predicted and observed values The mathematical formulation incorporates, where the error terms include squared differences for TFE, TGA, and TGE predictions, and regularization terms include variances of beta parameters and expression states.
}
}
\note{
Important considerations:
\itemize{
\item This function assumes the existence of several global variables:
\code{branch_params_names}, \code{train_data_pos}, \code{tao}, and \code{Tslot_K}
\item The function returns negative values for compatibility with minimization algorithms
\item Parameter names must follow the specific convention defined in \code{branch_params_names}
\item The function is computationally intensive due to multiple nested operations
\item Regularization terms help prevent overfitting by penalizing parameter variations
\item The weighting scheme (100 times and -100 times) is designed for optimization stability
}
}
\examples{
\dontrun{
f0 = f_train_cal(theta)
}
}
\seealso{
\code{\link{R_cal}}, \code{\link{Hill_cal}}, \code{\link{S_cal}}
}
